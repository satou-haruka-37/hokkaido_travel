<% if @post.images.present? %>
  <% assign_meta_tags title: @post.title, image: @post.images.first.url %>
<% else %>
  <% assign_meta_tags title: @post.title %>
<% end %>

<div class="min-h-screen">
  <div class="flex justify-center my-14">
    <div class="card w-full sm:w-[800px] shadow-xl">
      <div class="card-body p-10">
        <div class="flex items-center justify-between">
          <div>
            <% if request.referer.present? %>
              <% referer_path = URI.parse(request.referer).path %>
              <% if referer_path == mypage_bookmark_posts_path %>
                <%= link_to "＜ 戻る", mypage_bookmark_posts_path %>
              <% elsif referer_path == mypage_posts_path %>
                <%= link_to "＜ 戻る", mypage_posts_path %>
              <% elsif referer_path == latest_posts_posts_path %>
                <%= link_to "＜ 戻る", latest_posts_posts_path %>
              <% else %>
                <%= link_to "＜ 戻る", posts_path %>
              <% end %>
            <% else %>
              <%= link_to "＜ 戻る", posts_path %>
            <% end %>
          </div>
          <div>
            <% if logged_in? %>
              <%= render 'bookmark_button', { post: @post } %>
            <% end %>
          </div>
        </div>
        <div class="my-7">
          <div class="flex justify-center">
            <% if @post.images.present? %>
              <div class="carousel">
                <div id="slide1" class="carousel-item relative w-full justify-center items-center">
                  <%= image_tag @post.images.first.to_s, width: 500%>
                  <% if @post.images.second.present? %>
                    <div class="absolute flex justify-end transform -translate-y-1/2 right-2.5 top-1/2">
                      <a href="#slide2" class="btn btn-circle glass btn-sm">❯</a>
                    </div>
                  <% end %>
                </div>
                <% if @post.images.second.present? %>
                  <div id="slide2" class="carousel-item relative w-full justify-center items-center">
                    <%= image_tag @post.images.second.to_s, width: 500 %>
                    <div class="absolute flex justify-between transform -translate-y-1/2 left-2.5 right-2.5 top-1/2">
                      <a href="#slide1" class="btn btn-circle glass btn-sm">❮</a>
                      <% if @post.images.third.present? %>
                        <a href="#slide3" class="btn btn-circle glass btn-sm">❯</a>
                      <% end %>
                    </div>
                  </div>
                <% end %>
                <% if @post.images.third.present? %>
                  <div id="slide3" class="carousel-item relative w-full justify-center items-center">
                    <%= image_tag @post.images.third.to_s, width: 500 %>
                    <div class="absolute flex justify-start transform -translate-y-1/2 left-2.5 top-1/2">
                      <a href="#slide2" class="btn btn-circle glass btn-sm">❮</a>
                    </div>
                  </div>
                <% end %>
              </div>
            <% end %>
          </div>
        </div>
        <div class="px-1 sm:px-28">
          <div>
            <p class="text-3xl font-bold mb-2"><%= @post.title %></p>
          </div>
          <div>
            <% @post.tags.each do |tag| %>
              <span class="badge badge-info gap-2"><%= tag.title %></span>
            <% end %>
            <% @post.seasons.each do |season| %>
              <span class="badge badge-warning gap-2"><%= season.title %></span>
            <% end %>
          </div>
          <div class="mt-9">
            <p class="font-bold">所在地</p>
            <p><%= @post.address %></p>
          </div>
          <% if @post.body.present? %>
            <div class="mt-8">
              <p class="font-bold">おすすめポイント</p>
              <p><%= @post.body %></p>
            </div>
          <% end %>
          <div class="mt-8">
            <p class="font-bold">アクセス</p>
            <div class="mt-2 flex justify-center">
              <div id="map" class="w-full h-60 sm:w-96 sm:h-96"></div>
            </div>
          </div>
          <div class="mt-8">
            <div class="mt-7 flex items-center">
              <div>移動時間：</div>
              <div id="calculate-route">
                <div class="btn">位置情報を許可する</div>
              </div>
            </div>
            <%= link_to "※位置情報取得ボタンが押せない場合はこちら", location_trouble_path, class: " mt-1 btn btn-xs btn-ghost" %>
          </div>
          <div class="mt-12">
            <p class="font-bold">近くのおすすめスポット</p>
            <div id="nearby-posts" class="mt-2 flex flex-wrap justify-center"></div>
          </div>
          <div class="mt-8 flex justify-between items-center">
            <div class="flex items-center">
              <% if @post.user.present? %>
                <div>
                  <% if @post.user.avatar? %>
                    <%= image_tag @post.user.avatar.url, class: "rounded-full w-10" %>
                  <% else %>
                    <%= image_tag ("default.webp"), class: "rounded-full w-10" %>
                  <% end %>
                </div>
                <div class="ml-5">
                  <%= @post.user.name %>
                </div>
              <% else %>
                <div>
                  <%= image_tag ("default.webp"), class: "rounded-full w-10" %>
                </div>
                <div class="ml-5">
                  <p>退会したユーザー</p>
                </div>
              <% end %>
            </div>

            <div class="space-x-2 flex items-center">
              <p class="text-xs hidden sm:block">SNSで共有</p>
              <div>
                <%= link_to "https://twitter.com/intent/tweet?url=#{ request.url }&text=#{@post.title}を見つけたよ！%0A&hashtags=えぞとらべる&hashtags=北海道&hashtags=北海道旅行&hashtags=#{@post.title.gsub(/[[:space:]]+/, '')}", target: '_blank' do %>
                  <%= image_tag ("sns_x.webp"), class: "rounded-full w-10" %>
                <% end %>
              </div>
              <div class="w-10">
                <%= link_to "https://social-plugins.line.me/lineit/share?url=#{ request.url }&text=#{@post.title}を見つけたよ！", target: '_blank' do %>
                  <%= image_tag ("sns_line.webp"), class: "rounded-full w-10" %>
                <% end %>
              </div>
            </div>
          </div>
        </div>
        <% if current_user && (current_user == @post.user || current_user.admin?) %>
          <div class="mt-8 flex justify-end">
            <%= link_to "編集", edit_post_path(@post), class: "btn mr-2" %>
            <%= button_to "削除", post_path(@post), method: :delete, class: "btn", id: "delete-button" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>
</div>

<script>
  // ミニマップの表示
  function initMap() {
    const mapElement = document.getElementById('map');

    const mapOptions = {
      center: { lat: <%= @post.latitude %>, lng: <%= @post.longitude %> },
      zoom: 16,
      mapTypeControl: false,
      fullscreenControl: false,
      keyboardShortcuts: false
    };

    const map = new google.maps.Map(mapElement, mapOptions);

    const marker = new google.maps.Marker({
      position: { lat: <%= @post.latitude %>, lng: <%= @post.longitude %> },
      map: map,
      title: '<%= @post.title %>'
    });
  }


  // 道民用の移動時間表示
  document.addEventListener('DOMContentLoaded', function() {
    // ユーザーの位置情報取得の許可状態を確認
    if ('geolocation' in navigator) {
      navigator.permissions.query({name: 'geolocation'}).then(function(result) {
        if (result.state === 'granted') {
          // 許可されている場合は自動的に移動時間を計算
          navigator.geolocation.getCurrentPosition(function(position) {
            const originLat = position.coords.latitude;
            const originLng = position.coords.longitude;
            calculateRoute(originLat, originLng, destinationLat, destinationLng);
          });
        } else {
          // 許可されていない場合は位置情報取得確認のボタンを表示
          document.getElementById('calculate-route').style.display = 'block';
        }
      });
    } else {
      alert('位置情報が取得できませんでした');
    }
  });

  const destinationLat = <%= @post.latitude %>;
  const destinationLng = <%= @post.longitude %>;

  document.getElementById('calculate-route').addEventListener('click', function() {
    // ユーザーに位置情報取得
    if ('geolocation' in navigator) {
      navigator.geolocation.getCurrentPosition(function(position) {
        const originLat = position.coords.latitude;
        const originLng = position.coords.longitude;

        // Google Maps APIを使って移動時間を計算するための関数を呼び出し
        calculateRoute(originLat, originLng, destinationLat, destinationLng);
      });
    } else {
      alert('位置情報が取得できませんでした');
    }
  });

  function calculateRoute(originLat, originLng, destinationLat, destinationLng) {
    const directionsService = new google.maps.DirectionsService();

    const request = {
      origin: {lat: originLat, lng: originLng},
      destination: {lat: destinationLat, lng: destinationLng},
      travelMode: 'DRIVING'
    };

    directionsService.route(request, function(response, status) {
      if (status == 'OK') {
        // 移動時間を取得して表示
        const travelTime = response.routes[0].legs[0].duration.text;
        document.getElementById('calculate-route').innerHTML = '現在地からおよそ 車で' + travelTime;
      } else {
        alert('移動時間を取得できませんでした');
      }
    });
  }


  // 近くのおすすめスポット表示機能
  document.addEventListener("DOMContentLoaded", function() {
    const postId = <%= @post.id %>;
    const postLatitude = <%= @post.latitude %>;
    const postLongitude = <%= @post.longitude %>;

    fetch(`/posts/${postId}/nearby_posts?distance=20`) // distance=検索したい距離(km)
      .then(response => {
        if (!response.ok) {
          throw new Error("Network response was not ok");
        }
        return response.json();
      })
      .then(data => {
        const nearbyPostsContainer = document.getElementById('nearby-posts');

        if (data.length === 0) {
          const noPostsMessage = document.createElement('p');
          noPostsMessage.textContent = '見つかりませんでした';
          noPostsMessage.className = 'px-2 text-neutral-content';
          nearbyPostsContainer.appendChild(noPostsMessage);
        } else {
          data.forEach(post => {
            // カード要素（カード全体をリンクに）
            const card = document.createElement('a');
            card.className = 'card bg-base-100 shadow-xl w-[200px] h-[150px] m-4 pb-4 flex items-center justify-center';
            card.href = `/posts/${post.id}`;

            // 投稿に写真があれば画像を表示
            if (post.images && post.images.length > 0) {
              const img = document.createElement('img');
              img.src = post.images[0].url; // 最初の画像のURLを設定
              img.className = 'rounded-t-2xl aspect-[16/9] object-cover'; // Tailwind CSSのクラス
              card.appendChild(img); // 画像をカードに追加
            }

            // 投稿のタイトルを表示
            const title = document.createElement('h3');
            title.textContent = post.title;
            title.className = 'text-xs p-2';
            card.appendChild(title);
            nearbyPostsContainer.appendChild(card);
          });
        }
      })
      .catch(error => {
        console.log(error);
        console.error('There has been a problem with your fetch operation:', error);
      });
  });
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_API_KEY"] %>&callback=initMap"></script>