<div class="card w-96 bg-base-100 shadow-xl">
  <div class="card-body">
    <%= form_with(model: post, local: true) do |f| %>
      <%= render 'shared/error_messages', object: f.object %>
      <div>
        <%= f.label :title, for: "Title" %>
        <%= f.text_field :title, id: "Title", placeholder: "スポット名を入力して下さい", class: "input input-bordered w-full max-w-xs", autocomplete: "off" %>
      </div>
      <div class="mt-5">
        <%= f.label :address, for: "Address" %>
        <%= f.text_field :address, id: "Address", placeholder: "住所を入力してください", class: "input input-bordered w-full max-w-xs", autocomplete: "off" %>
      </div>
      <div class="mt-5">
        <%= f.label :body, for: "Body" %>
        <%= f.text_field :body, id: "Body", placeholder: "おすすめポイントなど、一言", class: "input input-bordered w-full max-w-xs", autocomplete: "off" %>
      </div>
      <div class="mt-5">
        <p>タグ</p>
        <div class="flex flex-wrap items-center justify-center -mx-2">
          <%= f.collection_check_boxes(:tag_ids, Tag.all, :id, :title) do |tag| %>
            <label class="block cursor-pointer flex-grow px-2 mb-4 w-1/3">
              <%= tag.check_box(class: 'hidden', data: { behavior: 'tag-checkbox' }) %>
              <button type="button" class="btn btn-sm mt-2 w-full" data-behavior="tag-button"><%= tag.text %></button>
            </label>
          <% end %>
        </div>
      </div>
      <div class="flex justify-center">
        <%= f.submit class: "btn btn-info mt-5" %>
      </div>
    <% end %>
  </div>
</div>

<script type="text/javascript">
  function initialize() {
    // タイトルの入力フィールドを取得
    var inputTitle = document.getElementById('Title');
    // 住所の入力フィールドを取得
    var inputAddress = document.getElementById('Address');
    //オートコンプリートで表示される情報の設定（都市名のみ、スポットなど）
    var options = {
      types: ['establishment'],
    };

    // タイトルの入力フィールドにオートコンプリートを適用
    var autocompleteTitle = new google.maps.places.Autocomplete(inputTitle, options);
    // 住所の入力フィールドにオートコンプリートを適用
    var autocompleteAddress = new google.maps.places.Autocomplete(inputAddress, options);

    // タイトルのオートコンプリートの選択が変更されたときのリスナーを追加
    autocompleteTitle.addListener('place_changed', function() {
      // 選択された場所の情報を取得
      var place = autocompleteTitle.getPlace();
      // タイトルのフィールドに選択された場所の名称を入力
      inputTitle.value = place.name;
      // 住所のフィールドに選択された場所の住所を入力
      inputAddress.value = place.formatted_address;
    });

    // 住所のオートコンプリートの選択が変更されたときのリスナーを追加
    autocompleteAddress.addListener('place_changed', function() {
      // 選択された場所の情報を取得
      var place = autocompleteAddress.getPlace();
      // タイトルのフィールドに選択された場所の名称を入力
      inputTitle.value = place.name;
      // 住所のフィールドに選択された場所の住所を入力
      inputAddress.value = place.formatted_address;
    });
  }

  // ページのロードが完了したら initialize 関数を実行
  document.addEventListener('DOMContentLoaded', function() {
    // Google Maps APIの読み込みスクリプト
    var script = document.createElement('script');
    script.src = 'https://maps.googleapis.com/maps/api/js?key=<%= ENV["GOOGLE_MAPS_API_KEY"] %>&libraries=places&callback=initialize';
    document.body.appendChild(script);
  });


  document.addEventListener('DOMContentLoaded', function() {
    const buttons = document.querySelectorAll('[data-behavior="tag-button"]');

    buttons.forEach(function(button) {
      button.addEventListener('click', function() {
        const checkbox = this.parentNode.querySelector('[data-behavior="tag-checkbox"]');
        checkbox.checked = !checkbox.checked;

        if (checkbox.checked) {
          this.classList.add('bg-success', 'text-white');
        } else {
          this.classList.remove('bg-success', 'text-white');
        }
      });
    });
  });
</script>
